#include <cstddef>
#include <vector>

/*
 * Simple ring-buffer class:
 * use it to make vectors of class T and size buffsize
 * I used std::vector class to gurentee contiguous memory
 * use push to add elements
 * when vector fills up, push will replace oldest index
 * */

template <class T>
struct SimpleRingBuffer
{
public:
  std::vector<T> Vdt;
  std::vector<T> Vy1;
  std::vector<T> Vy2;

  SimpleRingBuffer(size_t buffsize);

  int push(T dt, T y1, T y2);

private:
  size_t xi, Ni, buffersize, Vmin, Vmax;
};
