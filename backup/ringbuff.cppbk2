#include "ringbuff.h"
#include <algorithm>    // std::minmax_element

template <class T>
Vbuff<T>::Vbuff(size_t buffsize)
{
  buffersize = buffsize;
  V.reserve(buffsize);
  xi = 0;
  Ni = 0;
}

template <class T>
size_t Vbuff<T>::push(T data)
{
  if(V.size() < buffersize)
  {
    V.push_back(data);
    xi = Ni;
  }
  else
  {
    xi = Ni % buffersize;
    V[xi] = data;
  }

  const auto [xmin, xmax] = std::minmax_element(begin(V), end(V));
  min = (size_t)*xmin; max = (size_t)*xmax;
  return ++Ni;
}
